# Generated by Django 5.2.3 on 2025-07-20 06:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('schools', '0008_educationdegree_phonecontact_address_uuid_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('name', models.CharField(max_length=255, verbose_name='College Name')),
                ('short_name', models.CharField(blank=True, max_length=50, verbose_name='Short Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('focus_areas', models.TextField(blank=True, verbose_name='Focus Areas')),
                ('established_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Established Year')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'College',
                'verbose_name_plural': 'Colleges',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='educationallevel',
            options={'ordering': ('order', 'level_name', '-created_date', 'updated_date'), 'verbose_name': 'education level', 'verbose_name_plural': 'education levels'},
        ),
        migrations.AlterModelOptions(
            name='educationdegree',
            options={'ordering': ('order', 'degree_name', '-created_date', 'updated_date'), 'verbose_name': 'education degree', 'verbose_name_plural': 'education degrees'},
        ),
        migrations.AddField(
            model_name='educationallevel',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Display order for sorting'),
        ),
        migrations.AddField(
            model_name='educationallevel',
            name='parent_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_levels', to='schools.educationallevel'),
        ),
        migrations.AddField(
            model_name='educationdegree',
            name='credit_hours',
            field=models.PositiveIntegerField(default=120, help_text='Required credit hours'),
        ),
        migrations.AddField(
            model_name='educationdegree',
            name='duration_years',
            field=models.PositiveIntegerField(default=4, help_text='Typical duration in years'),
        ),
        migrations.AddField(
            model_name='educationdegree',
            name='level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='degrees', to='schools.educationallevel'),
        ),
        migrations.AddField(
            model_name='educationdegree',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Display order for sorting'),
        ),
        migrations.AddField(
            model_name='educationdegree',
            name='parent_degree',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_degrees', to='schools.educationdegree'),
        ),
        migrations.AlterField(
            model_name='educationdegree',
            name='degree_name',
            field=models.CharField(max_length=75, unique=True, verbose_name='Degree'),
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('name', models.CharField(max_length=255, verbose_name='Major Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Major Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('credit_hours', models.PositiveIntegerField(default=120, verbose_name='Required Credit Hours')),
                ('duration_years', models.PositiveIntegerField(default=4, verbose_name='Duration (Years)')),
                ('career_paths', models.TextField(blank=True, verbose_name='Career Paths')),
                ('industry_focus', models.CharField(blank=True, max_length=255, verbose_name='Industry Focus')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('colleges', models.ManyToManyField(blank=True, related_name='majors', to='schools.college')),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='majors', to='schools.educationdegree')),
            ],
            options={
                'verbose_name': 'Major',
                'verbose_name_plural': 'Majors',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('name', models.CharField(max_length=255, verbose_name='Branch Name')),
                ('short_name', models.CharField(blank=True, max_length=100, verbose_name='Short Name')),
                ('is_headquarters', models.BooleanField(default=False, verbose_name='Is Headquarters')),
                ('address', models.TextField(verbose_name='Address')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='ZIP Code')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('established_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Established Year')),
                ('student_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Student Capacity')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('colleges', models.ManyToManyField(blank=True, related_name='branch_colleges', to='schools.college')),
                ('degrees_offered', models.ManyToManyField(blank=True, related_name='branch_degrees', to='schools.educationdegree')),
                ('headquarters_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_branches', to='schools.schoolbranch', verbose_name='Headquarters Branch')),
                ('majors_offered', models.ManyToManyField(blank=True, related_name='branch_majors', to='schools.major')),
            ],
            options={
                'verbose_name': 'School Branch',
                'verbose_name_plural': 'School Branches',
                'ordering': ['-is_headquarters', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolCollegeAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Association')),
                ('partnership_type', models.CharField(blank=True, max_length=100, verbose_name='Partnership Type')),
                ('established_date', models.DateField(blank=True, null=True, verbose_name='Partnership Established')),
                ('joint_programs', models.TextField(blank=True, verbose_name='Joint Programs')),
                ('credit_transfer', models.BooleanField(default=False, verbose_name='Credit Transfer Available')),
                ('dual_degree', models.BooleanField(default=False, verbose_name='Dual Degree Programs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='college_associations', to='schools.schoolbranch')),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_associations', to='schools.college')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='college_associations', to='schools.school')),
            ],
            options={
                'verbose_name': 'School College Association',
                'verbose_name_plural': 'School College Associations',
                'ordering': ['school', 'college'],
                'unique_together': {('school', 'college', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='SchoolDegreeOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available for Enrollment')),
                ('enrollment_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enrollment Capacity')),
                ('current_enrollment', models.PositiveIntegerField(default=0, verbose_name='Current Enrollment')),
                ('duration_years', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (Years)')),
                ('credit_hours', models.PositiveIntegerField(blank=True, null=True, verbose_name='Credit Hours')),
                ('tuition_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tuition Fee')),
                ('application_deadline', models.DateField(blank=True, null=True, verbose_name='Application Deadline')),
                ('admission_requirements', models.TextField(blank=True, verbose_name='Admission Requirements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='degree_offerings', to='schools.schoolbranch')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_offerings', to='schools.educationdegree')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='degree_offerings', to='schools.school')),
            ],
            options={
                'verbose_name': 'School Degree Offering',
                'verbose_name_plural': 'School Degree Offerings',
                'ordering': ['school', 'degree'],
                'unique_together': {('school', 'degree', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='SchoolMajorOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available for Enrollment')),
                ('enrollment_capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Enrollment Capacity')),
                ('current_enrollment', models.PositiveIntegerField(default=0, verbose_name='Current Enrollment')),
                ('credit_hours', models.PositiveIntegerField(blank=True, null=True, verbose_name='Credit Hours')),
                ('duration_years', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (Years)')),
                ('tuition_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tuition Fee')),
                ('specializations', models.TextField(blank=True, verbose_name='Specializations')),
                ('concentrations', models.TextField(blank=True, verbose_name='Concentrations')),
                ('career_outcomes', models.TextField(blank=True, verbose_name='Career Outcomes')),
                ('industry_partners', models.TextField(blank=True, verbose_name='Industry Partners')),
                ('application_deadline', models.DateField(blank=True, null=True, verbose_name='Application Deadline')),
                ('admission_requirements', models.TextField(blank=True, verbose_name='Admission Requirements')),
                ('gpa_requirement', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(4.0)], verbose_name='Minimum GPA Requirement')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='major_offerings', to='schools.schoolbranch')),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='major_offerings', to='schools.educationdegree')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_offerings', to='schools.major')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='major_offerings', to='schools.school')),
            ],
            options={
                'verbose_name': 'School Major Offering',
                'verbose_name_plural': 'School Major Offerings',
                'ordering': ['school', 'major'],
                'unique_together': {('school', 'major', 'branch', 'degree')},
            },
        ),
    ]
