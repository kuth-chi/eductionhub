# Generated by Django 5.0.7 on 2024-12-14 06:23

import django.db.models.deletion
import schools.models.school
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EducationalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='unique ID')),
                ('level_name', models.CharField(max_length=75, unique=True, verbose_name='Level')),
                ('badge', models.CharField(blank=True, max_length=125, verbose_name='badge')),
                ('color', models.CharField(blank=True, max_length=6, verbose_name='color')),
                ('description', models.CharField(blank=True, default='No description', max_length=500, verbose_name='description')),
                ('slug', models.SlugField(max_length=75, verbose_name='slug')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='status')),
            ],
            options={
                'verbose_name': 'education level',
                'verbose_name_plural': 'education levels',
                'ordering': ('level_name', '-created_date', 'updated_date'),
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('short_name', models.CharField(blank=True, max_length=5, unique=True, verbose_name='short name')),
                ('url', models.URLField(blank=True, help_text='Base URL of the platform')),
                ('icon', models.CharField(blank=True, max_length=128)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='unique identifier')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('self_data', models.CharField(blank=True, db_index=True, max_length=128, verbose_name='self data field')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(db_index=True, max_length=128, unique=True)),
                ('description', models.TextField(blank=True, default='Description about the school type')),
                ('icon', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'verbose_name': 'School Type',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='PlatformProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_url', models.URLField(blank=True, help_text="URL of the school's profile on the platform")),
                ('username', models.CharField(blank=True, help_text='Username or handle on the platform', max_length=128)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_profiles_platform', to='schools.platform')),
            ],
            options={
                'verbose_name': 'platform profile',
                'verbose_name_plural': 'platform profiles',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=schools.models.school.school_logo_upload_path, verbose_name='logo')),
                ('name', models.CharField(blank=True, max_length=75, verbose_name='name')),
                ('local_name', models.CharField(blank=True, max_length=128, verbose_name='local name')),
                ('short_name', models.CharField(blank=True, max_length=25, verbose_name='short name')),
                ('code', models.CharField(blank=True, max_length=15, verbose_name='code')),
                ('description', models.TextField(blank=True, default='The school description')),
                ('established', models.DateField(blank=True, null=True, verbose_name='established')),
                ('founder', models.CharField(blank=True, max_length=125, verbose_name='founder')),
                ('president', models.CharField(blank=True, max_length=125, verbose_name='president')),
                ('endowment', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=18, verbose_name='endowment')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('motto', models.CharField(blank=True, default='N/A', max_length=250, verbose_name='motto')),
                ('tuition', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=18, verbose_name='tuition')),
                ('slug', models.SlugField(blank=True, max_length=75, verbose_name='slug')),
                ('uuid', models.URLField(default=uuid.uuid4, unique=True, verbose_name='unique identifier')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('self_data', models.CharField(blank=True, db_index=True, max_length=128, verbose_name='self data field')),
                ('educational_levels', models.ManyToManyField(blank=True, related_name='school_educational_levels', to='schools.educationallevel', verbose_name='school level')),
                ('platforms', models.ManyToManyField(related_name='school_platforms', through='schools.PlatformProfile', to='schools.platform', verbose_name='platforms')),
                ('type', models.ManyToManyField(blank=True, related_name='school_types', to='schools.schooltype', verbose_name='type')),
            ],
            options={
                'verbose_name': 'school',
                'verbose_name_plural': 'schools',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='platformprofile',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_profiles_school', to='schools.school'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, verbose_name='name')),
                ('street', models.CharField(blank=True, max_length=255, verbose_name='street')),
                ('city', models.CharField(blank=True, max_length=128, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=128, verbose_name='state')),
                ('zip_code', models.CharField(blank=True, max_length=10, verbose_name='zip code')),
                ('country', models.CharField(blank=True, max_length=128, verbose_name='country')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('schools', models.ManyToManyField(related_name='school_addresses', to='schools.school')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='platformprofile',
            index=models.Index(fields=['school', 'platform'], name='school_platform_idx'),
        ),
        migrations.AlterIndexTogether(
            name='address',
            index_together={('street', 'city', 'state', 'zip_code', 'country')},
        ),
    ]
