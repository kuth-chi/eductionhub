# Production Environment Variables for Django Backend
# This file should be deployed to production and kept secure

# Django Core Settings
SECRET_KEY=your-super-secret-production-key-here
DEBUG=False

# JWT Key Configuration (Base64 encoded)
# Generate these with: openssl genrsa -out private_key.pem 2048 && openssl rsa -in private_key.pem -pubout -out public_key.pem
# Then base64 encode them: base64 -i private_key.pem && base64 -i public_key.pem
PRIVATE_KEY_B64=your-base64-encoded-private-key-here
PUBLIC_KEY_B64=your-base64-encoded-public-key-here

# URL Configuration for Production
WEB_CLIENT_URL=https://educationhub.io
BACKEND_URL=https://authz.educationhub.io
FRONTEND_URL=https://educationhub.io
FRONTEND_URL_ORIGIN_ONE=https://educationhub.io

# Azure Hosting Configuration (if using Azure)
WEBSITE_HOSTNAME=authz.educationhub.io
CUSTOM_DOMAIN=educationhub.io

# Database Configuration (Azure PostgreSQL)
AZURE_POSTGRESQL_CONNECTIONSTRING=host=your-postgres-server port=5432 dbname=your-database user=your-username password=your-password sslmode=require

# Azure Storage Configuration (for media files)
AZURE_ACCOUNT_NAME=your-storage-account-name
AZURE_CONTAINER=media
AZURE_ACCOUNT_KEY=your-storage-account-key
AZURE_STORAGE_URL=https://your-storage-account-name.blob.core.windows.net

# Social Authentication Keys
GOOGLE_AUTH_CLIENT_ID=your-google-client-id
GOOGLE_AUTH_SECRET=your-google-client-secret
TELEGRAM_BOT_ID=your-telegram-bot-id
TELEGRAM_LOGIN_PUBLIC_KEY=your-telegram-public-key

# External APIs
OPEN_AI_KEY=your-openai-api-key
IPINFO_TOKEN=your-ipinfo-token

# Important Notes:
# 1. Replace all placeholder values with actual production credentials
# 2. Keep this file secure and never commit it to version control
# 3. Ensure JWT keys are properly generated and base64 encoded
# 4. Update database connection string with actual Azure PostgreSQL details
# 5. Configure Azure Storage with actual account details
